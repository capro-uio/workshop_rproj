{
  "hash": "ce04a0331515e43ed8a36a7c7efd416f",
  "result": {
    "markdown": "---\ntitle: \"Project Structure\"\nsubtitle: \"Working in R and RStudio\"\nauthor: \"Athanasia Mo Mowinckel\"\n#logo: \"img/wtf-logo-square-transparent.png\"\nformat: \n  revealjs: \n    height: 900\n    width: 1600\n    theme: \n      - night\n      - capro-reveal.scss\n    highlight-style: github-dark\n    transition: fade\n    slide-number: true\n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n## What are packages / libraries in R?\n\n-   Extensions to the programming language\n    -   contains functions & documentation of these\\\n    -   standardised for easier install and use across users\\\n-   Often written by other users to solve specific tasks in R\n    -   solving particular statistical problems\n    -   new types of data visualisation\n\n## Common package issues in pipelines\n\n> A package masks the function of another package I use\\*\\*\n\n-   example: `select()` from {dplyr} being masked by `select()` from {MASS}\n\n## Common package issues in pipelines\n\n> A package masks the function of another package I use\\*\\*\n\n-   example: `select()` from {dplyr} being masked by `select()` from {MASS}\n\n### solution 1\n\nload libraries in reverse order of importance.\n\n-   i.e. load {dplyr} last, and its `select()` will be prioritised over the one from {MASS}.\n\n``` r\nlibrary(MASS)\nlibrary(dplyr)\n```\n\n## Common package issues in pipelines\n\n> A package masks the function of another package I use\\*\\*\n\n-   example: `select()` from {dplyr} being masked by `select()` from {MASS}\n\n### solution 2:\n\nif you only need a single function from another package, call the function directly, rather than loading the entire library.\n\n-   i.e. run `MASS::lm.gls()` rather than `library(MASS); lm.gls()`.\n\n-   the double colon `::` enables you to access a library's. functions without loading the entire library.\n\n    -   this is called `namespacing`\n\n## Common package issues in pipelines\n\n**Preventative measures:** \n\n::: columns\n::: {.column width=\"50%\"}\n\n\n- load all libraries you need at the top of your scripts \n\n- this helps you control the order things are loaded and possible function masking \n\n- makes it clear to anyone else running the script what the dependencies are\n:::\n\n::: {.column width=\"50%\"}\n - When introducing a new package to your script \n \n - add it to the top of the script \n \n - restart your R session so it is clean \n \n - start re-running your code to make sure everything still works as expected \n \n - if it doesn't, make sure its the first library to be loaded, and try again in a fresh R session\n:::\n\n:::\n\n## Common package issues in pipelines\n\n> The package I used 1 year ago no longer exists\n\n\nThere are archives of packages, like [MRAN](https://mran.microsoft.com/), that will likely help you.\nBut you'll need to know which version you used, etc.\n\n\nCan be tricky, but the {[checkpoint](https://github.com/RevolutionAnalytics/checkpoint)} package might be of great assistance!\n\n## R package managers\n\n- [RStudio package manager](https://www.rstudio.com/products/package-manager/)\n\n  - RStudio enterprise solution\n  \n- [packrat](https://rstudio.github.io/packrat/walkthrough.html)\n\n  - one of the first\n  \n  - a little complicated to use, requiring some knowledge of package paths etc.\n  \n- [checkpoint](https://github.com/RevolutionAnalytics/checkpoint)\n\n  - I have no experience with it, but it looks decent\n  \n- [renv](https://rstudio.github.io/renv/articles/renv.html)\n\n  - new and widely used\n  \n  - developed by RStudio\n  \n  - creates fairly simple procedures to follow\n\n\n## Use renv to make your R projects more:\n\n- **Isolated**\n  - installing or updating a package for one project won't break other projects\n  - gives each project its own private package library\n\n- **Portable**\n  - transport your projects from one computer to another\n  - makes it easy to install the packages your project depends on.\n\n- **Reproducible**\n  - records the exact package versions you depend on\n  - ensures those exact versions are the ones that get installed wherever you go.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_1adf561f\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}