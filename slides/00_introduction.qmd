---
title: "Introduction"
subtitle: "Working in R and RStudio"
author: "Athanasia Mo Mowinckel"
format: revealjs
---

```{r}
library(countdown)
```

# CAPRO

We specialize in data processing and capture of large life science data for social sciences and humanities

::: footer
<https://www.capro.dev/>
:::

# CAPRO

::: {style="text-align: right;"}
-   Data flow and processing

-   Data capture

-   Project data management

-   Registry data handling

-   HPC analyses
:::

::: footer
<https://www.capro.dev/>
:::

# Meet your neighbors

```{r}
countdown(
  color_background = "#CC4C4C",
  color_text = "#d2d2d2",
  color_finished_background = "#CC4C4C",
  minutes = 3,
  bottom = "0%"
  )
```

# Pre-workshop checklist

<br><br>

<https://www.capro.dev/workshop_rproj/#preparations>

# Asking for help

::: columns
::: column
::: {data-id="box1" style="background: #CC4C4C; width: 500px; height: 150px; margin: 20px; padding: 20px; padding-top: 70px; text-align: center;"}
I'm stuck or need help
:::
:::

::: column
::: {data-id="box2" style="background: #37765d; width: 500px; height: 150px; margin: 20px; padding: 20px; padding-top: 70px; text-align: center;"}
All good, ready to move on
:::
:::
:::

```{r child="../sections/schedule.qmd"}
```

# Go here now

<br><br>

<https://www.capro.dev/workshop_rproj/>

------------------------------------------------------------------------

# Getting started

```{r}
library(countdown)
```

```{r font-awesome-color}
# fill for font awesome icons
fa_fill <- "#CC4C4C"
```

## Checklist

<br>

::: columns
::: {.column width="50%"}
`r fontawesome::fa("check", fill = fa_fill)` R installed? Pretty recent?

¬†¬†¬†¬† Recommended R ‚â• 4.3.0

`r fontawesome::fa("check", fill = fa_fill)` RStudio installed?

¬†¬†¬†¬† I'm on 2023.06.1 Build 524 ¬†¬†¬†¬†
:::

::: {.column width="50%"}
`r fontawesome::fa("check", fill = fa_fill)` Packages?

``` r
# Run in R
install.packages(c(
  "remotes",      # installing packages from GitHub
  "rmarkdown",    # rendering reports
  "fs",           # file system operations
  "here",         # navigating paths
  "usethis",      # for course materials
  "tidyverse"     # data-wrangling
))
```
:::
:::

## 

<br>

::: {.center-x .r-fit-text}
What [*Did*]{.important} They Forget <br> to Teach You?
:::

##  {background-image="img/everything-else.PNG" background-size="contain"}

## Learning objectives

1.  Establish the concept of the project as the basic organizational unit of work.

2.  Apply best practices in and leverage benefits of working in RStudio projects, including

-   Creating robust file paths that travel well in time and space.

-   Constructing human and machine readable file names that sort nicely.

-   Differentiating workflow elements, analysis inputs, and analysis outputs in project structure to create navigable programming interfaces.

-   Restarting R frequently, with a blank slate.

## Why do we care about project management?

::: columns
::: {.column width="48%"}
### Portability

*The ability to move the project without breaking code or needing adapting*

-   you will change computers
-   you will reorganise your file structure
-   you will share your code with others
:::

::: {.column width="4%"}
:::

::: {.column .fragment width="48%"}
### Reproducibility

*The ability to rerun the entire process from scratch*

-   not just for reviews
-   not just for best-practice science
-   also for future (or even present) you
-   and for your collaborators/helpers
:::
:::

# Be organized

##  {background-image="img/deep_thoughts.PNG"}

## Be organized as you go, <br> not "tomorrow"

::: columns
::: {.column width="48%"}
Don't fret over past mistakes.

![](img/clutter.png)
:::

::: {.column width="4%"}
:::

::: {.column .fragment width="48%"}
Raise the bar for new work.

![](img/organised.png)
:::
:::

## Be organized

<br>

<br>

::: r-fit-text
self-explaining `>>>` wordy, needy explainers
:::

## Be organized

::: {.columns .v-center-container}
::: {.column width="45%"}
![](img/packages-report-example.png)
:::

::: {.column width="10%"}
::: r-fit-text
`>>>`
:::
:::

::: {.column width="45%"}
¬† file salad <br> ¬† + an out of date README
:::
:::

## Good enough practices in scientific computing

::: {.columns .v-center-container}
::: {.column width="45%"}
![](img/airplane-duct.png)
:::

::: {.column width="2%"}
:::

::: {.fragment .column width="53%"}
*PLOS Computational Biology*

Wilson, Bryan, Cranston, Kitzes, Nederbragt, Teal (2017)

<https://doi.org/10.1371/journal.pcbi.1005510>

<http://bit.ly/good-enuff>
:::
:::

# Practical Example

## Your R installation

::: {.fragment fragment-index="1"}
**R packages**

-   the natural unit for distributing R code
:::

::: {.fragment fragment-index="2"}
**base R**

-   14 base + 15 recommended packages

-   ships with all binary distributions of R
:::

::: {.fragment fragment-index="3"}
**For example, have you used lattice recently?** ü§∑

-   it came with your R installation, can use out of the box

-   `library(lattice)`
:::

## Additional packages

<br>

::: columns
::: {.column width="40%"}
**CRAN, \~20k packages**

```{r, eval = FALSE, echo = TRUE}
# install from CRAN
install.packages("remotes")
# attach
library(remotes)
```
:::

::: {.column width="2%"}
:::

::: {.column .fragment width="58%"}
**GitHub, ??? packages**

```{r, eval = FALSE, echo = TRUE}
# install via remotes
remotes::install_github("rstats-wtf/wtfdbg")
# attach
library(wtfdbg)
```
:::
:::

## Where do packages live locally?

<br>

By default, in the default library

`.Library`

<br>

All libraries for the current session

`.libPaths()`

<br>

All installed packages

`installed.packages()`

## Syntax aside: pipes

-   2014+ magrittr pipe `%>%`

-   2021+ (R $\geq$ 4.1.0) native R pipe `|>`

2022 Isabella Vel√°squez Understanding the native R pipe \|\> <https://ivelasq.rbind.io/blog/understanding-the-r-pipe/>

. . .

<brshort>

::: columns
::: {.column width="50%"}
```{r echo=TRUE, eval=FALSE}
whatever(arg1, arg2, arg3, ...)
arg1 |>  
  whatever(arg2, arg3)
```
:::

::: {.column width="5%"}
:::

::: {.column width="45%"}
```{r echo=TRUE, eval=FALSE}
mean(0:10)
0:10 |> 
  mean()
```
:::
:::

::: footer
Change `CTRL + Shift + M` shortcut to native pipe:

`Tools -> Global Options -> Code ->`

¬†¬† `Editing -> check Use Native Pipe Operator`
:::

## Syntax aside: namespacing

`dplyr::select()`

-   tells R explicitly to use the function `select` from the package `dplyr`

-   can help to avoid name conflicts (e.g., `MASS::select()`)

-   does not require `library(dplyr)`

. . .

::: columns
::: {.column width="45%"}
```{r echo=TRUE, eval=FALSE}
library(dplyr)
select(mtcars, mpg, cyl) 
mtcars |>  
  select(mpg, cyl) 
```
:::

::: {.column width="5%"}
:::

::: {.column width="50%"}
```{r echo=TRUE, eval=FALSE}
# library(dplyr) not needed
dplyr::select(mtcars, mpg, cyl) 
mtcars |>  
  dplyr::select(mpg, cyl) 
```
:::
:::

## üßê Explore your R installation

```{r, eval=FALSE, echo=TRUE}
install.packages("usethis")
library(usethis)
# saves project on desktop by default for most users
use_course("rstats-wtf/wtf-explore-libraries")
# use_course("rstats-wtf/wtf-explore-libraries", destdir = "my/new/location")
# can alternatively download from 
# https://github.com/rstats-wtf/wtf-explore-libraries
```

::: small
Read the `README.md` to get started.

-   `01_explore-libraries_spartan.R` <br> (directions to explore without suggested code)

-   `01_explore-libraries_comfy.R`<br> (directions to explore with suggested code)

-   `01_explore-libraries_solution.R`<br> (directions to explore with code solutions)
:::

```{r}
countdown(
  color_background = "#CC4C4C",
  color_text = "#d2d2d2",
  color_finished_background = "#CC4C4C",
  minutes = 15,
  bottom = "0%"
  )
```
